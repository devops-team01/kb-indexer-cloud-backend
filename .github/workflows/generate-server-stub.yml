name: Regenerate Python Flask Server Stub

on:
  push:
    paths:
      - 'openapi_server/openapi/openapi.yaml'
  pull_request:
    paths:
      - 'openapi_server/openapi/openapi.yaml'

jobs:
  regenerate-stub:
    runs-on: ubuntu-latest
    name: Create Branch, Regenerate Server Stub, and Commit

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Determine Current Branch Name
        id: branch-name
        run: |
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            echo "::set-output name=branch::$(echo ${{ github.head_ref }})"
          else
            echo "::set-output name=branch::$(git rev-parse --abbrev-ref HEAD)"
          fi

      - name: Create New Branch
        run: |
          ORIGINAL_BRANCH_NAME="${{ steps.branch-name.outputs.branch }}"
          BRANCH_NAME="${ORIGINAL_BRANCH_NAME}-auto-generated-stub-$(date +%Y-%m-%d-%H-%M-%S)"
          echo "Creating new branch: $BRANCH_NAME"
          git checkout -b $BRANCH_NAME

      - name: Regenerate Server Stub
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          generator: python-flask
          openapi-file: 'openapi_server/openapi/openapi.yaml'

      - name: Move Generated Files to Main Directory
        run: |
          cp -r python-flask-client/* .
          rm -rf python-flask-client

      - name: Set autoSetupRemote for Git
        run: git config --global push.autoSetupRemote true

      - name: Commit and Push Changes to New Branch
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Automatically regenerate Python Flask server stub and update repository" -a || echo "No changes to commit"
          git push --set-upstream origin $BRANCH_NAME
