openapi: 3.0.0
info:
  description: This is an API for managing kb-indexer jobs
  title: kb-indexer API
  version: 1.0.0
servers:
- description: Local API Server
  url: /
security:
  - BearerAuth: []
paths:
  /indexers:
    get:
      operationId: indexers_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Indexer'
                type: array
                x-content-type: application/json
          description: Successfully listed all indexers
      summary: List all available indexers.
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /indexers/{indexerType}/dataSources:
    get:
      operationId: indexers_indexer_type_data_sources_get
      parameters:
      - explode: false
        in: path
        name: indexerType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataSource'
                type: array
                x-content-type: application/json
          description: Successfully listed data sources for the indexer
      summary: List all data sources for a specific indexer type
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /indexers/{indexerType}/dataSources/{dataSourceId}/records:
    get:
      operationId: indexers_indexer_type_data_sources_data_source_id_records_get
      parameters:
      - explode: false
        in: path
        name: indexerType
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: dataSourceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
                x-content-type: application/json
          description: Successfully listed records for the data source
      summary: List all records for a specific data source of an indexer
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /jobs:
    get:
      operationId: jobs_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Job'
                type: array
                x-content-type: application/json
          description: Successfully listed jobs
      summary: List the jobs
      x-openapi-router-controller: swagger_server.controllers.default_controller
    post:
      operationId: jobs_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobConfiguration'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
          description: Job successfully created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request body
      summary: Create a new job with a command or configuration
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /jobs/{jobId}:
    delete:
      operationId: jobs_job_id_delete
      parameters:
      - explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successfully deleted the job
        "404":
          description: Job not found
      summary: Delete a job
      x-openapi-router-controller: swagger_server.controllers.default_controller
    get:
      operationId: jobs_job_id_get
      parameters:
      - explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: Successfully retrieved job details
        "404":
          description: Job not found
      summary: Get a job's details
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /jobs/{jobId}/request-logs-update:
    post:
      operationId: jobs_job_id_request_logs_update_post
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          type: string
        description: The unique identifier for the job for which the log update is requested.
      responses:
        "200":
          description: Request to update the job's logs was accepted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum: [ "success", "denied" ]
                    description: Indicates whether the request to update the logs was accepted or denied.
                required:
                  - message
        "400":
          description: Invalid request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Job not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: Requests an update to the logs for a specific job without providing a request body.
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /environment_variables:
      post:
        operationId: environment_variables_post
        summary: Add new environment variables
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentVariable'
        responses:
          '200':
            description: Environment variables created
        x-openapi-router-controller: swagger_server.controllers.default_controller
      get:
        operationId: environment_variables_get
        summary: Get environment variables
        responses:
          '200':
            description: A list of environment variables
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/EnvironmentVariable'
        x-openapi-router-controller: swagger_server.controllers.default_controller



components:
  schemas:
    Indexer:
      example:
        id: id
        type: type
      properties:
        id:
          description: Unique identifier for the indexer
          type: string
        type:
          description: "Type of the indexer (API, web, notebook, dataset, etc.)"
          type: string
      title: Indexer
      type: object
    DataSource:
      example:
        description: description
        id: id
        type: type
      properties:
        id:
          description: Unique identifier for the data source
          type: string
        type:
          description: "Type of the data source (e.g., Climate_API, Environment_API,\
            \ etc)"
          type: string
        description:
          description: Description of the data source
          type: string
      title: DataSource
      type: object
    Job:
      example:
        jobId: 507f1f77bcf86cd799439014
        jobConfiguration:
          repeat: repeat
          indexerConfiguration:
            pipeline: search
            record: Kaggle
            indexer:
              id: id
              type: type
          command: command
        creationTimestamp: 2022-03-05T19:40:51.533Z
        status: initializing
        generatedCommand: ls
      properties:
        jobId:
          description: "Unique identifier for the job, also used as the database identifier"
          type: string
        jobConfiguration:
          $ref: '#/components/schemas/JobConfiguration'
        creationTimestamp:
          description: Timestamp when the job was created
          format: date-time
          type: string
        status:
          description: Current status of the job
          type: string
        generatedCommand:
          description: The generated command if the job was created with a configuration
          type: string
      required:
      - jobConfiguration
      - jobId
      title: Job
      type: object
    JobConfiguration:
      type: object
      oneOf:
        - required: [command]
          properties:
            command:
              type: string
        - required: [indexerConfiguration]
          properties:
            indexerConfiguration:
              $ref: '#/components/schemas/IndexerConfiguration'
      properties:
        command:
          description: Shell command used to run the job
          type: string
        indexerConfiguration:
          $ref: '#/components/schemas/IndexerConfiguration'
        environmentVariables:
          description: "Add environment variables for the job"
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
        repeat:
          description: "Optional field for how often the task should repeat (e.g., hourly, daily, weekly)"
          type: string
    IndexerConfiguration:
      description: "Configuration details if the job uses an indexer
        \ and optional record"
      example:
        pipeline: search
        record: test
        indexer:
          id: id
          type: type
      properties:
        indexer:
          $ref: '#/components/schemas/Indexer'
        record:
          type: string
        pipeline:
          description: "Which pipeline to run (search, index, or pipeline)"
          enum:
          - search
          - index
          - pipeline
          type: string
      title: IndexerConfiguration
      type: object
    Error:
      example:
        code: 400
        message: Invalid request body provided
      properties:
        code:
          description: Error code
          format: int32
          type: integer
        message:
          description: Error message
          type: string
      title: Error
      type: object
    inline_response_201:
      example:
        jobId: jobId
      properties:
        jobId:
          description: Unique identifier for the newly created job
          type: string
      required:
      - jobId
      title: inline_response_201
      type: object
      
    EnvironmentVariable:
      type: object
      properties:
        name:
          type: string
        value:
          type: string

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      # in: cookie
